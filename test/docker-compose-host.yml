x-teranode-base: &teranode-base
  image: teranode:latest
  network_mode: "host"
  depends_on:
    - postgres
    - kafka-shared

x-teranode-commands-base: &teranode-commands-base
  image: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/teranode-commands:latest
  network_mode: "host"

x-teranode-coinbase-base: &teranode-coinbase-base
  image: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/teranode-coinbase:latest
  network_mode: "host"
  depends_on:
    - postgres
    - kafka-shared

x-aerospike-base: &aerospike-base
  image: aerospike:ce-7.2.0.3_1
  network_mode: "host"
  command: --config-file /etc/aerospike.conf

services:
  teranode-builder:
    container_name: teranode-builder
    image: teranode:latest
    network_mode: "host"
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        BASE_IMG: ghcr.io/bsv-blockchain/teranode-base:build-latest
        RUN_IMG: ghcr.io/bsv-blockchain/teranode-base:run-latest
    entrypoint: ["pwd"]

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.59
    network_mode: "host"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411

  postgres:
    container_name: postgres
    image: postgres:latest
    network_mode: "host"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: really_strong_password_change_me
      POSTGRES_DB: postgres
    volumes:
      - ./postgres/update-config.sh:/docker-entrypoint-initdb.d/postgres-update-config.sh
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ../data/postgres:/var/lib/postgresql/data
    restart: on-failure

  kafka-shared:
    container_name: kafka-shared
    image: redpandadata/redpanda:latest
    network_mode: "host"
    mem_limit: 256m
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:19092
      - --advertise-kafka-addr PLAINTEXT://localhost:19092
      - --pandaproxy-addr 0.0.0.0:9093
      - --advertise-pandaproxy-addr localhost:19093

  kafka-console-shared:
    container_name: kafka-console-shared
    image: docker.redpanda.com/redpandadata/console:latest
    network_mode: "host"
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["localhost:19092"]
    depends_on:
      - kafka-shared

  teranode-1:
    <<: *teranode-base
    container_name: teranode-1
    depends_on:
      postgres:
        condition: service_started
      kafka-shared:
        condition: service_started
      aerospike-1:
        condition: service_started
    logging:
      options:
        max-file: "1" # Single log file, no rotation
    entrypoint:
      [
        "/app/wait.sh",
        "localhost",
        "3100",
        "2",
        "--",
        "/app/wait.sh",
        "localhost",
        "15432",
        "0",
        "--",
        "/app/wait.sh",
        "localhost",
        "19092",
        "0",
        "--",
        "/app/teranode.run",
        "-localTestStartFromState=RUNNING",
      ]
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode1"
      JAEGER_SERVICE_NAME: teranode-1
      JAEGER_AGENT_HOST: localhost
      JAEGER_AGENT_PORT: 6831
      logLevel: "DEBUG"
    volumes:
      - ../settings.conf:/app/settings.conf
      - ../settings_local.conf:/app/settings_local.conf
      - ../data/teranode1/txstore:/app/data/teranode1/txstore
      - ../data/teranode1/subtreestore:/app/data/teranode1/subtreestore
      - ../data/teranode1/blockstore:/app/data/teranode1/blockstore
      - ../data/teranode1/subtree_quorum:/app/data/teranode1/subtree_quorum
      - ../data/teranode1/external:/app/data/teranode1/external
      - ./wait.sh:/app/wait.sh

  teranode-2:
    <<: *teranode-base
    container_name: teranode-2
    depends_on:
      postgres:
        condition: service_started
      kafka-shared:
        condition: service_started
      aerospike-2:
        condition: service_started
    logging:
      options:
        max-file: "1" # Single log file, no rotation
    entrypoint:
      [
        "/app/wait.sh",
        "localhost",
        "3200",
        "2",
        "--",
        "/app/wait.sh",
        "localhost",
        "15432",
        "0",
        "--",
        "/app/wait.sh",
        "localhost",
        "19092",
        "0",
        "--",
        "/app/teranode.run",
        "-localTestStartFromState=RUNNING",
      ]
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode2"
      JAEGER_SERVICE_NAME: teranode-2
      JAEGER_AGENT_HOST: localhost
      JAEGER_AGENT_PORT: 6831
    volumes:
      - ../settings.conf:/app/settings.conf
      - ../settings_local.conf:/app/settings_local.conf
      - ../data/teranode2/txstore:/app/data/teranode2/txstore
      - ../data/teranode2/subtreestore:/app/data/teranode2/subtreestore
      - ../data/teranode2/blockstore:/app/data/teranode2/blockstore
      - ../data/teranode2/subtree_quorum:/app/data/teranode2/subtree_quorum
      - ../data/teranode2/external:/app/data/teranode2/external
      - ./wait.sh:/app/wait.sh

  teranode-3:
    <<: *teranode-base
    container_name: teranode-3
    depends_on:
      postgres:
        condition: service_started
      kafka-shared:
        condition: service_started
      aerospike-3:
        condition: service_started
    logging:
      options:
        max-file: "1" # Single log file, no rotation
    entrypoint:
      [
        "/app/wait.sh",
        "localhost",
        "3300",
        "2",
        "--",
        "/app/wait.sh",
        "localhost",
        "15432",
        "0",
        "--",
        "/app/wait.sh",
        "localhost",
        "19092",
        "0",
        "--",
        "/app/teranode.run",
        "-localTestStartFromState=RUNNING",
      ]
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode3"
      JAEGER_SERVICE_NAME: teranode-3
      JAEGER_AGENT_HOST: localhost
      JAEGER_AGENT_PORT: 6831
    volumes:
      - ../settings.conf:/app/settings.conf
      - ../settings_local.conf:/app/settings_local.conf
      - ../data/teranode3/txstore:/app/data/teranode3/txstore
      - ../data/teranode3/subtreestore:/app/data/teranode3/subtreestore
      - ../data/teranode3/blockstore:/app/data/teranode3/blockstore
      - ../data/teranode3/subtree_quorum:/app/data/teranode3/subtree_quorum
      - ../data/teranode3/external:/app/data/teranode3/external
      - ./wait.sh:/app/wait.sh

  first-100-blocks-1:
    image: curlimages/curl:latest
    profiles:
      - default
    container_name: first-100-blocks-1
    network_mode: "host"
    depends_on:
      - teranode-1
    volumes:
      - ./scripts/generate-blocks.sh:/generate-blocks.sh
    entrypoint:
      [
        "/generate-blocks.sh",
        "--host",
        "localhost",
        "--port",
        "19292",
        "--numBlocks",
        "0",
        "--generate",
      ]
    restart: no

  miner-1:
    <<: *teranode-commands-base
    profiles:
      - default
    container_name: miner-1
    depends_on:
      - teranode-1
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode1"
    command:
      [
        "miner",
        "-coinbase-addr",
        "myL4TciLD59ESU9MmKH1rvfYb8QXhFHHN6",
        "-coinbase-sig",
        "/teranode1/",
        "-rpcport",
        "19292",
      ]
    volumes:
      - ../settings.conf:/app/settings.conf
      - ../data/miner1:/app/data
    restart: unless-stopped

  miner-2:
    <<: *teranode-commands-base
    profiles:
      - default
    container_name: miner-2
    depends_on:
      - teranode-2
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode2"
    command:
      [
        "miner",
        "-coinbase-addr",
        "1Hh6nxmJrk4jyiJRxodAK32A9EXM8dx6F3",
        "-coinbase-sig",
        "/teranode2/",
        "-rpcport",
        "29292",
      ]
    volumes:
      - ../settings.conf:/app/settings.conf
      - ../data/miner2:/app/data
    restart: unless-stopped

  miner-3:
    <<: *teranode-commands-base
    profiles:
      - default
    container_name: miner-3
    depends_on:
      - teranode-3
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode3"
    command:
      [
        "miner",
        "-coinbase-addr",
        "16Uy8VwEKAkEmH7RVtCjqyv6L6RfyvkJM2",
        "-coinbase-sig",
        "/teranode3/",
        "-rpcport",
        "39292",
      ]
    volumes:
      - ../settings.conf:/app/settings.conf
      - ../data/miner3:/app/data
    restart: unless-stopped

  block-generator:
    image: curlimages/curl:latest
    profiles:
      - chainintegrity
    container_name: block-generator
    depends_on:
      - teranode-1
    network_mode: "host"
    volumes:
      - ./scripts/generate-blocks.sh:/generate-blocks.sh
    entrypoint:
      [
        "/generate-blocks.sh",
        "--host",
        "localhost",
        "--port",
        "19292",
        "--generate",
      ]
    restart: unless-stopped

  coinbase-1:
    <<: *teranode-coinbase-base
    # profiles:
    #   - skip
    container_name: coinbase-1
    depends_on:
      - teranode-1
    entrypoint:
      [
        "sh",
        "-c",
        "sleep 10 && exec ./coinbase.run -all=0 -coinbase=1 -faucet=1",
      ]
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode1.coinbase"
      profilerAddr: "localhost:17092"
    volumes:
      - ../settings.conf:/app/settings.conf
      - ../settings_local.conf:/app/settings_local.conf
      - ../data/coinbase1:/app/data

  tx-blaster-1:
    <<: *teranode-coinbase-base
    # profiles:
    #   - skip
    container_name: tx-blaster-1
    depends_on:
      - coinbase-1
      - teranode-1
    environment:
      SETTINGS_CONTEXT: "docker.host.teranode1.coinbase"
      BLASTER_ARGS: "-workers=2"
      profilerAddr: "localhost:17093"
    entrypoint: ["./blaster.run"]
    command:
      ["-workers=1", "-print=0", "-profile=:7092", "-log=0", "-limit=100"]
    volumes:
      - ../settings.conf:/app/settings.conf
      - ../settings_local.conf:/app/settings_local.conf
      - ../data/txblaster1:/app/data
      # - ../data/txblaster.log:/app/data/txblaster.log

  prometheus-1:
    container_name: prometheus-1
    image: prom/prometheus:v2.44.0
    network_mode: "host"
    mem_limit: 64m
    command:
      - "--web.listen-address=:19090"
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus/prometheus-host-1.yml:/etc/prometheus/prometheus.yml

  prometheus-2:
    container_name: prometheus-2
    image: prom/prometheus:v2.44.0
    network_mode: "host"
    mem_limit: 64m
    command:
      - "--web.listen-address=:29090"
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus/prometheus-host-2.yml:/etc/prometheus/prometheus.yml

  prometheus-3:
    container_name: prometheus-3
    image: prom/prometheus:v2.44.0
    network_mode: "host"
    mem_limit: 64m
    command:
      - "--web.listen-address=:39090"
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus/prometheus-host-3.yml:/etc/prometheus/prometheus.yml

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    network_mode: "host"
    volumes:
      - ./grafana/datasources/main-host.yaml:/etc/grafana/provisioning/datasources/main.yaml
      - ./grafana/dashboards/main.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/grafana.db:/var/lib/grafana
    depends_on:
      - prometheus-1
      - prometheus-2
      - prometheus-3

  aerospike-1:
    container_name: aerospike-1
    <<: *aerospike-base
    volumes:
      - ./aerospike/aerospike-1.conf:/etc/aerospike.conf
      - ../data/aerospike1/logs:/var/log/aerospike
      - ../data/aerospike1/data:/opt/aerospike/data

  aerospike-2:
    container_name: aerospike-2
    <<: *aerospike-base
    volumes:
      - ./aerospike/aerospike-2.conf:/etc/aerospike.conf
      - ../data/aerospike2/logs:/var/log/aerospike
      - ../data/aerospike2/data:/opt/aerospike/data

  aerospike-3:
    container_name: aerospike-3
    <<: *aerospike-base
    volumes:
      - ./aerospike/aerospike-3.conf:/etc/aerospike.conf
      - ../data/aerospike3/logs:/var/log/aerospike
      - ../data/aerospike3/data:/opt/aerospike/data

  aerospike-exporter-1:
    container_name: aerospike-exporter-1
    image: aerospike/aerospike-prometheus-exporter:latest
    environment:
      AS_HOST: "localhost"
      AS_PORT: "3100"
      AGENT_BIND_PORT: "19145"
      METRIC_LABELS: "type='development',source='aerospike'"
    network_mode: "host"

  aerospike-exporter-2:
    container_name: aerospike-exporter-2
    image: aerospike/aerospike-prometheus-exporter:latest
    environment:
      AS_HOST: "localhost"
      AS_PORT: "3200"
      AGENT_BIND_PORT: "29145"
      METRIC_LABELS: "type='development',source='aerospike'"
    network_mode: "host"

  aerospike-exporter-3:
    container_name: aerospike-exporter-3
    image: aerospike/aerospike-prometheus-exporter:latest
    environment:
      AS_HOST: "localhost"
      AS_PORT: "3300"
      AGENT_BIND_PORT: "39145"
      METRIC_LABELS: "type='development',source='aerospike'"
    network_mode: "host"
