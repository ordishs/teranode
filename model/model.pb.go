// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: model/model.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// swagger:enum NotificationType
type NotificationType int32

const (
	NotificationType_PING             NotificationType = 0
	NotificationType_Subtree          NotificationType = 1
	NotificationType_Block            NotificationType = 2
	NotificationType_NotUsed          NotificationType = 3 // Deprecated, was previously used for MiningOn
	NotificationType_FSMState         NotificationType = 4
	NotificationType_BlockSubtreesSet NotificationType = 5
	NotificationType_PeerFailure      NotificationType = 6 // Peer failed to provide data (catchup, subtree, block, etc)
	NotificationType_BlockPersisted   NotificationType = 7 // Block persister completed processing a block (includes height in metadata)
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "PING",
		1: "Subtree",
		2: "Block",
		3: "NotUsed",
		4: "FSMState",
		5: "BlockSubtreesSet",
		6: "PeerFailure",
		7: "BlockPersisted",
	}
	NotificationType_value = map[string]int32{
		"PING":             0,
		"Subtree":          1,
		"Block":            2,
		"NotUsed":          3,
		"FSMState":         4,
		"BlockSubtreesSet": 5,
		"PeerFailure":      6,
		"BlockPersisted":   7,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_model_proto_enumTypes[0].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_model_model_proto_enumTypes[0]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{0}
}

// swagger:model MiningCandidate
type MiningCandidate struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PreviousHash        []byte                 `protobuf:"bytes,2,opt,name=previous_hash,json=previousHash,proto3" json:"previous_hash,omitempty"`
	CoinbaseValue       uint64                 `protobuf:"varint,3,opt,name=coinbase_value,json=coinbaseValue,proto3" json:"coinbase_value,omitempty"`
	Version             uint32                 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	NBits               []byte                 `protobuf:"bytes,5,opt,name=nBits,proto3" json:"nBits,omitempty"`
	Time                uint32                 `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`
	Height              uint32                 `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
	MerkleProof         [][]byte               `protobuf:"bytes,8,rep,name=merkle_proof,json=merkleProof,proto3" json:"merkle_proof,omitempty"`
	SubtreeCount        uint32                 `protobuf:"varint,9,opt,name=subtreeCount,proto3" json:"subtreeCount,omitempty"`
	NumTxs              uint32                 `protobuf:"varint,10,opt,name=num_txs,json=numTxs,proto3" json:"num_txs,omitempty"`
	SizeWithoutCoinbase uint64                 `protobuf:"varint,11,opt,name=size_without_coinbase,json=sizeWithoutCoinbase,proto3" json:"size_without_coinbase,omitempty"`
	SubtreeHashes       [][]byte               `protobuf:"bytes,12,rep,name=subtree_hashes,json=subtreeHashes,proto3" json:"subtree_hashes,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MiningCandidate) Reset() {
	*x = MiningCandidate{}
	mi := &file_model_model_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiningCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningCandidate) ProtoMessage() {}

func (x *MiningCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningCandidate.ProtoReflect.Descriptor instead.
func (*MiningCandidate) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{0}
}

func (x *MiningCandidate) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MiningCandidate) GetPreviousHash() []byte {
	if x != nil {
		return x.PreviousHash
	}
	return nil
}

func (x *MiningCandidate) GetCoinbaseValue() uint64 {
	if x != nil {
		return x.CoinbaseValue
	}
	return 0
}

func (x *MiningCandidate) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *MiningCandidate) GetNBits() []byte {
	if x != nil {
		return x.NBits
	}
	return nil
}

func (x *MiningCandidate) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *MiningCandidate) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MiningCandidate) GetMerkleProof() [][]byte {
	if x != nil {
		return x.MerkleProof
	}
	return nil
}

func (x *MiningCandidate) GetSubtreeCount() uint32 {
	if x != nil {
		return x.SubtreeCount
	}
	return 0
}

func (x *MiningCandidate) GetNumTxs() uint32 {
	if x != nil {
		return x.NumTxs
	}
	return 0
}

func (x *MiningCandidate) GetSizeWithoutCoinbase() uint64 {
	if x != nil {
		return x.SizeWithoutCoinbase
	}
	return 0
}

func (x *MiningCandidate) GetSubtreeHashes() [][]byte {
	if x != nil {
		return x.SubtreeHashes
	}
	return nil
}

// swagger:model MiningSolution
type MiningSolution struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Coinbase      []byte                 `protobuf:"bytes,2,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	Time          *uint32                `protobuf:"varint,3,opt,name=time,proto3,oneof" json:"time,omitempty"`
	Nonce         uint32                 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Version       *uint32                `protobuf:"varint,5,opt,name=version,proto3,oneof" json:"version,omitempty"`
	BlockHash     []byte                 `protobuf:"bytes,6,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiningSolution) Reset() {
	*x = MiningSolution{}
	mi := &file_model_model_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiningSolution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiningSolution) ProtoMessage() {}

func (x *MiningSolution) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiningSolution.ProtoReflect.Descriptor instead.
func (*MiningSolution) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{1}
}

func (x *MiningSolution) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MiningSolution) GetCoinbase() []byte {
	if x != nil {
		return x.Coinbase
	}
	return nil
}

func (x *MiningSolution) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *MiningSolution) GetNonce() uint32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *MiningSolution) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *MiningSolution) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

// swagger:model NotificationMetadata
type NotificationMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// define a map of string to string
	Metadata      map[string]string `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationMetadata) Reset() {
	*x = NotificationMetadata{}
	mi := &file_model_model_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationMetadata) ProtoMessage() {}

func (x *NotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationMetadata.ProtoReflect.Descriptor instead.
func (*NotificationMetadata) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{2}
}

func (x *NotificationMetadata) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// swagger:model BlockInfo
type BlockInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SeenAt           *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=seen_at,json=seenAt,proto3" json:"seen_at,omitempty"`
	Height           uint32                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Orphaned         bool                   `protobuf:"varint,3,opt,name=orphaned,proto3" json:"orphaned,omitempty"`
	BlockHeader      []byte                 `protobuf:"bytes,4,opt,name=block_header,json=blockHeader,proto3" json:"block_header,omitempty"`
	Miner            string                 `protobuf:"bytes,5,opt,name=miner,proto3" json:"miner,omitempty"`
	CoinbaseValue    uint64                 `protobuf:"varint,6,opt,name=coinbase_value,json=coinbaseValue,proto3" json:"coinbase_value,omitempty"`
	TransactionCount uint64                 `protobuf:"varint,7,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`
	Size             uint64                 `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BlockInfo) Reset() {
	*x = BlockInfo{}
	mi := &file_model_model_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockInfo) ProtoMessage() {}

func (x *BlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockInfo.ProtoReflect.Descriptor instead.
func (*BlockInfo) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{3}
}

func (x *BlockInfo) GetSeenAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SeenAt
	}
	return nil
}

func (x *BlockInfo) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockInfo) GetOrphaned() bool {
	if x != nil {
		return x.Orphaned
	}
	return false
}

func (x *BlockInfo) GetBlockHeader() []byte {
	if x != nil {
		return x.BlockHeader
	}
	return nil
}

func (x *BlockInfo) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *BlockInfo) GetCoinbaseValue() uint64 {
	if x != nil {
		return x.CoinbaseValue
	}
	return 0
}

func (x *BlockInfo) GetTransactionCount() uint64 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

func (x *BlockInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// swagger:model SuitableBlock
type SuitableBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height        uint32                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	NBits         []byte                 `protobuf:"bytes,3,opt,name=nBits,proto3" json:"nBits,omitempty"`
	Time          uint32                 `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	ChainWork     []byte                 `protobuf:"bytes,5,opt,name=chain_work,json=chainWork,proto3" json:"chain_work,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuitableBlock) Reset() {
	*x = SuitableBlock{}
	mi := &file_model_model_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuitableBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuitableBlock) ProtoMessage() {}

func (x *SuitableBlock) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuitableBlock.ProtoReflect.Descriptor instead.
func (*SuitableBlock) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{4}
}

func (x *SuitableBlock) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *SuitableBlock) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *SuitableBlock) GetNBits() []byte {
	if x != nil {
		return x.NBits
	}
	return nil
}

func (x *SuitableBlock) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SuitableBlock) GetChainWork() []byte {
	if x != nil {
		return x.ChainWork
	}
	return nil
}

// swagger:model BlockStats
type BlockStats struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BlockCount         uint64                 `protobuf:"varint,1,opt,name=block_count,json=blockCount,proto3" json:"block_count,omitempty"`
	TxCount            uint64                 `protobuf:"varint,2,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	MaxHeight          uint64                 `protobuf:"varint,3,opt,name=max_height,json=maxHeight,proto3" json:"max_height,omitempty"`
	AvgBlockSize       float64                `protobuf:"fixed64,4,opt,name=avg_block_size,json=avgBlockSize,proto3" json:"avg_block_size,omitempty"`
	AvgTxCountPerBlock float64                `protobuf:"fixed64,5,opt,name=avg_tx_count_per_block,json=avgTxCountPerBlock,proto3" json:"avg_tx_count_per_block,omitempty"`
	FirstBlockTime     uint32                 `protobuf:"varint,6,opt,name=first_block_time,json=firstBlockTime,proto3" json:"first_block_time,omitempty"`
	LastBlockTime      uint32                 `protobuf:"varint,7,opt,name=last_block_time,json=lastBlockTime,proto3" json:"last_block_time,omitempty"`
	ChainWork          []byte                 `protobuf:"bytes,8,opt,name=chain_work,json=chainWork,proto3" json:"chain_work,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BlockStats) Reset() {
	*x = BlockStats{}
	mi := &file_model_model_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStats) ProtoMessage() {}

func (x *BlockStats) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStats.ProtoReflect.Descriptor instead.
func (*BlockStats) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{5}
}

func (x *BlockStats) GetBlockCount() uint64 {
	if x != nil {
		return x.BlockCount
	}
	return 0
}

func (x *BlockStats) GetTxCount() uint64 {
	if x != nil {
		return x.TxCount
	}
	return 0
}

func (x *BlockStats) GetMaxHeight() uint64 {
	if x != nil {
		return x.MaxHeight
	}
	return 0
}

func (x *BlockStats) GetAvgBlockSize() float64 {
	if x != nil {
		return x.AvgBlockSize
	}
	return 0
}

func (x *BlockStats) GetAvgTxCountPerBlock() float64 {
	if x != nil {
		return x.AvgTxCountPerBlock
	}
	return 0
}

func (x *BlockStats) GetFirstBlockTime() uint32 {
	if x != nil {
		return x.FirstBlockTime
	}
	return 0
}

func (x *BlockStats) GetLastBlockTime() uint32 {
	if x != nil {
		return x.LastBlockTime
	}
	return 0
}

func (x *BlockStats) GetChainWork() []byte {
	if x != nil {
		return x.ChainWork
	}
	return nil
}

// swagger:model DataPoint
type DataPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     uint32                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TxCount       uint64                 `protobuf:"varint,2,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	mi := &file_model_model_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{6}
}

func (x *DataPoint) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DataPoint) GetTxCount() uint64 {
	if x != nil {
		return x.TxCount
	}
	return 0
}

// swagger:model BlockDataPoints
type BlockDataPoints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataPoints    []*DataPoint           `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockDataPoints) Reset() {
	*x = BlockDataPoints{}
	mi := &file_model_model_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockDataPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDataPoints) ProtoMessage() {}

func (x *BlockDataPoints) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDataPoints.ProtoReflect.Descriptor instead.
func (*BlockDataPoints) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{7}
}

func (x *BlockDataPoints) GetDataPoints() []*DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

// swagger:model ChainTip
type ChainTip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Height        uint32                 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`       // Height of the chain tip
	Hash          string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`            // Block hash of the tip
	Branchlen     uint32                 `protobuf:"varint,3,opt,name=branchlen,proto3" json:"branchlen,omitempty"` // 0 for main chain, length of branch for forks
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`        // "active" for main chain, or "valid-fork", "valid-headers", "headers-only", "invalid"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChainTip) Reset() {
	*x = ChainTip{}
	mi := &file_model_model_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainTip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainTip) ProtoMessage() {}

func (x *ChainTip) ProtoReflect() protoreflect.Message {
	mi := &file_model_model_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainTip.ProtoReflect.Descriptor instead.
func (*ChainTip) Descriptor() ([]byte, []int) {
	return file_model_model_proto_rawDescGZIP(), []int{8}
}

func (x *ChainTip) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ChainTip) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ChainTip) GetBranchlen() uint32 {
	if x != nil {
		return x.Branchlen
	}
	return 0
}

func (x *ChainTip) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_model_model_proto protoreflect.FileDescriptor

const file_model_model_proto_rawDesc = "" +
	"\n" +
	"\x11model/model.proto\x12\x05model\x1a\x1fgoogle/protobuf/timestamp.proto\"\x84\x03\n" +
	"\x0fMiningCandidate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12#\n" +
	"\rprevious_hash\x18\x02 \x01(\fR\fpreviousHash\x12%\n" +
	"\x0ecoinbase_value\x18\x03 \x01(\x04R\rcoinbaseValue\x12\x18\n" +
	"\aversion\x18\x04 \x01(\rR\aversion\x12\x14\n" +
	"\x05nBits\x18\x05 \x01(\fR\x05nBits\x12\x12\n" +
	"\x04time\x18\x06 \x01(\rR\x04time\x12\x16\n" +
	"\x06height\x18\a \x01(\rR\x06height\x12!\n" +
	"\fmerkle_proof\x18\b \x03(\fR\vmerkleProof\x12\"\n" +
	"\fsubtreeCount\x18\t \x01(\rR\fsubtreeCount\x12\x17\n" +
	"\anum_txs\x18\n" +
	" \x01(\rR\x06numTxs\x122\n" +
	"\x15size_without_coinbase\x18\v \x01(\x04R\x13sizeWithoutCoinbase\x12%\n" +
	"\x0esubtree_hashes\x18\f \x03(\fR\rsubtreeHashes\"\xbd\x01\n" +
	"\x0eMiningSolution\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x1a\n" +
	"\bcoinbase\x18\x02 \x01(\fR\bcoinbase\x12\x17\n" +
	"\x04time\x18\x03 \x01(\rH\x00R\x04time\x88\x01\x01\x12\x14\n" +
	"\x05nonce\x18\x04 \x01(\rR\x05nonce\x12\x1d\n" +
	"\aversion\x18\x05 \x01(\rH\x01R\aversion\x88\x01\x01\x12\x1c\n" +
	"\tblockHash\x18\x06 \x01(\fR\tblockHashB\a\n" +
	"\x05_timeB\n" +
	"\n" +
	"\b_version\"\x9a\x01\n" +
	"\x14NotificationMetadata\x12E\n" +
	"\bmetadata\x18\x01 \x03(\v2).model.NotificationMetadata.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x95\x02\n" +
	"\tBlockInfo\x123\n" +
	"\aseen_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x06seenAt\x12\x16\n" +
	"\x06height\x18\x02 \x01(\rR\x06height\x12\x1a\n" +
	"\borphaned\x18\x03 \x01(\bR\borphaned\x12!\n" +
	"\fblock_header\x18\x04 \x01(\fR\vblockHeader\x12\x14\n" +
	"\x05miner\x18\x05 \x01(\tR\x05miner\x12%\n" +
	"\x0ecoinbase_value\x18\x06 \x01(\x04R\rcoinbaseValue\x12+\n" +
	"\x11transaction_count\x18\a \x01(\x04R\x10transactionCount\x12\x12\n" +
	"\x04size\x18\b \x01(\x04R\x04size\"\x84\x01\n" +
	"\rSuitableBlock\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\x12\x16\n" +
	"\x06height\x18\x02 \x01(\rR\x06height\x12\x14\n" +
	"\x05nBits\x18\x03 \x01(\fR\x05nBits\x12\x12\n" +
	"\x04time\x18\x04 \x01(\rR\x04time\x12\x1d\n" +
	"\n" +
	"chain_work\x18\x05 \x01(\fR\tchainWork\"\xb2\x02\n" +
	"\n" +
	"BlockStats\x12\x1f\n" +
	"\vblock_count\x18\x01 \x01(\x04R\n" +
	"blockCount\x12\x19\n" +
	"\btx_count\x18\x02 \x01(\x04R\atxCount\x12\x1d\n" +
	"\n" +
	"max_height\x18\x03 \x01(\x04R\tmaxHeight\x12$\n" +
	"\x0eavg_block_size\x18\x04 \x01(\x01R\favgBlockSize\x122\n" +
	"\x16avg_tx_count_per_block\x18\x05 \x01(\x01R\x12avgTxCountPerBlock\x12(\n" +
	"\x10first_block_time\x18\x06 \x01(\rR\x0efirstBlockTime\x12&\n" +
	"\x0flast_block_time\x18\a \x01(\rR\rlastBlockTime\x12\x1d\n" +
	"\n" +
	"chain_work\x18\b \x01(\fR\tchainWork\"D\n" +
	"\tDataPoint\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\rR\ttimestamp\x12\x19\n" +
	"\btx_count\x18\x02 \x01(\x04R\atxCount\"D\n" +
	"\x0fBlockDataPoints\x121\n" +
	"\vdata_points\x18\x01 \x03(\v2\x10.model.DataPointR\n" +
	"dataPoints\"l\n" +
	"\bChainTip\x12\x16\n" +
	"\x06height\x18\x01 \x01(\rR\x06height\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\tR\x04hash\x12\x1c\n" +
	"\tbranchlen\x18\x03 \x01(\rR\tbranchlen\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status*\x8a\x01\n" +
	"\x10NotificationType\x12\b\n" +
	"\x04PING\x10\x00\x12\v\n" +
	"\aSubtree\x10\x01\x12\t\n" +
	"\x05Block\x10\x02\x12\v\n" +
	"\aNotUsed\x10\x03\x12\f\n" +
	"\bFSMState\x10\x04\x12\x14\n" +
	"\x10BlockSubtreesSet\x10\x05\x12\x0f\n" +
	"\vPeerFailure\x10\x06\x12\x12\n" +
	"\x0eBlockPersisted\x10\aB*Z(github.com/bsv-blockchain/teranode/modelb\x06proto3"

var (
	file_model_model_proto_rawDescOnce sync.Once
	file_model_model_proto_rawDescData []byte
)

func file_model_model_proto_rawDescGZIP() []byte {
	file_model_model_proto_rawDescOnce.Do(func() {
		file_model_model_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_model_model_proto_rawDesc), len(file_model_model_proto_rawDesc)))
	})
	return file_model_model_proto_rawDescData
}

var file_model_model_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_model_model_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_model_model_proto_goTypes = []any{
	(NotificationType)(0),         // 0: model.NotificationType
	(*MiningCandidate)(nil),       // 1: model.MiningCandidate
	(*MiningSolution)(nil),        // 2: model.MiningSolution
	(*NotificationMetadata)(nil),  // 3: model.NotificationMetadata
	(*BlockInfo)(nil),             // 4: model.BlockInfo
	(*SuitableBlock)(nil),         // 5: model.SuitableBlock
	(*BlockStats)(nil),            // 6: model.BlockStats
	(*DataPoint)(nil),             // 7: model.DataPoint
	(*BlockDataPoints)(nil),       // 8: model.BlockDataPoints
	(*ChainTip)(nil),              // 9: model.ChainTip
	nil,                           // 10: model.NotificationMetadata.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_model_model_proto_depIdxs = []int32{
	10, // 0: model.NotificationMetadata.metadata:type_name -> model.NotificationMetadata.MetadataEntry
	11, // 1: model.BlockInfo.seen_at:type_name -> google.protobuf.Timestamp
	7,  // 2: model.BlockDataPoints.data_points:type_name -> model.DataPoint
	3,  // [3:3] is the sub-list for method output_type
	3,  // [3:3] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_model_model_proto_init() }
func file_model_model_proto_init() {
	if File_model_model_proto != nil {
		return
	}
	file_model_model_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_model_model_proto_rawDesc), len(file_model_model_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_model_proto_goTypes,
		DependencyIndexes: file_model_model_proto_depIdxs,
		EnumInfos:         file_model_model_proto_enumTypes,
		MessageInfos:      file_model_model_proto_msgTypes,
	}.Build()
	File_model_model_proto = out.File
	file_model_model_proto_goTypes = nil
	file_model_model_proto_depIdxs = nil
}
