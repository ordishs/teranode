x-teranode-base: &teranode-base
  image: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/teranode:latest
  depends_on:
    - postgres
    - kafka-shared
  networks:
    - teranode-network
  volumes:
    - ../data/test/${TEST_ID:-chainintegrity}:/app/data

x-teranode-coinbase-base: &teranode-coinbase-base
  image: 434394763103.dkr.ecr.eu-north-1.amazonaws.com/teranode-coinbase:latest
  networks:
    - teranode-network
  depends_on:
    - postgres
    - kafka-shared

x-aerospike-base: &aerospike-base
  image: aerospike:ce-7.2.0.3_1
  networks:
    - teranode-network
  command: --config-file /etc/aerospike.conf

networks:
  teranode-network:
    name: teranode-network-chainintegrity-${TEST_ID:-default}

services:
  postgres:
    container_name: postgres-chainintegrity-${TEST_ID:-default}
    image: postgres:latest
    networks:
      - teranode-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: really_strong_password_change_me
      POSTGRES_DB: postgres
    ports:
      - "15432:5432"
    expose:
      - "5432"
    volumes:
      # - ./postgres/update-config.sh:/docker-entrypoint-initdb.d/postgres-update-config.sh
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ../data/postgres:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  kafka-shared:
    container_name: kafka-shared-chainintegrity-${TEST_ID:-default}
    image: redpandadata/redpanda:latest
    mem_limit: 256m
    networks:
      - teranode-network
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://kafka-shared:9092
      - --pandaproxy-addr 0.0.0.0:9093
      - --advertise-pandaproxy-addr localhost:9093
    expose:
      - "8081"
      - "9092"
      - "9093"
    volumes:
      - ../data/test/${TEST_ID:-chainintegrity}/kafka:/var/lib/kafka

  kafka-console-shared:
    container_name: kafka-console-shared-chainintegrity-${TEST_ID:-default}
    image: docker.redpanda.com/redpandadata/console:latest
    networks:
      - teranode-network
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka-shared:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://kafka-shared:8081"]
    ports:
      - "18080:8080"
    depends_on:
      - kafka-shared

  aerospike-1:
    <<: *aerospike-base
    container_name: aerospike-1-chainintegrity-${TEST_ID:-default}
    ports:
      - "3100:3100"
    expose:
      - "3100"
    volumes:
      - ./aerospike/aerospike-1.conf:/etc/aerospike.conf
      - ../data/aerospike1/data:/opt/aerospike/data

  aerospike-2:
    <<: *aerospike-base
    container_name: aerospike-2-chainintegrity-${TEST_ID:-default}
    ports:
      - "3200:3200"
    expose:
      - "3200"
    volumes:
      - ./aerospike/aerospike-2.conf:/etc/aerospike.conf
      - ../data/aerospike2/data:/opt/aerospike/data

  aerospike-3:
    <<: *aerospike-base
    container_name: aerospike-3-chainintegrity-${TEST_ID:-default}
    ports:
      - "3300:3300"
    expose:
      - "3300"
    volumes:
      - ./aerospike/aerospike-3.conf:/etc/aerospike.conf
      - ../data/aerospike3/data:/opt/aerospike/data

  teranode1:
    <<: *teranode-base
    container_name: teranode1-chainintegrity-${TEST_ID:-default}
    image: teranode:latest
    depends_on:
      - aerospike-1
      - postgres
      - kafka-shared
    entrypoint:
      [
        "/app/wait.sh",
        "aerospike-1",
        "3100",
        "2",
        "--",
        "/app/wait.sh",
        "postgres",
        "5432",
        "0",
        "--",
        "/app/wait.sh",
        "kafka-shared",
        "9092",
        "0",
        "--",
        "/app/teranode.run",
        "-localTestStartFromState=RUNNING",
      ]
    environment:
      SETTINGS_CONTEXT: ${SETTINGS_CONTEXT_1:-docker.teranode1.test}
      logLevel: "DEBUG"
    ports:
      - "18000:8000"
      - "18081-18092:8081-8092"
      - "18094-18097:8094-8097"
      - "18099:8099"
      - "19091:9091"
      - "19905:9905"
      - "19292:9292"
    expose:
      - "8000"
      - "8081-8092"
      - "8094-8097"
      - "8099"
      - "9091"
      - "9905"
      - "9292"
    volumes:
      - ../settings.conf:/app/settings.conf
      - ./wait.sh:/app/wait.sh
      - ../data/teranode1/txstore:/app/data/txstore
      - ../data/teranode1/subtreestore:/app/data/subtreestore
      - ../data/teranode1/blockstore:/app/data/blockstore
      - ../data/teranode1/subtree_quorum:/app/data/subtree_quorum
      - ../data/teranode1/external:/app/data/external
  teranode2:
    <<: *teranode-base
    container_name: teranode2-chainintegrity-${TEST_ID:-default}
    image: teranode:latest
    depends_on:
      - aerospike-2
      - postgres
      - kafka-shared
    entrypoint:
      [
        "/app/wait.sh",
        "aerospike-2",
        "3200",
        "2",
        "--",
        "/app/wait.sh",
        "postgres",
        "5432",
        "0",
        "--",
        "/app/wait.sh",
        "kafka-shared",
        "9092",
        "0",
        "--",
        "/app/teranode.run",
        "-localTestStartFromState=RUNNING",
      ]
    environment:
      SETTINGS_CONTEXT: ${SETTINGS_CONTEXT_2:-docker.teranode2.test}
      logLevel: "DEBUG"
    ports:
      - "28000:8000"
      - "28081-28092:8081-8092"
      - "28094-28097:8094-8097"
      - "28099:8099"
      - "29091:9091"
      - "29905:9905"
      - "29292:9292"
    expose:
      - "8000"
      - "8081-8092"
      - "8094-8097"
      - "8099"
      - "9091"
      - "9905"
      - "9292"
    volumes:
      - ../settings.conf:/app/settings.conf
      - ./wait.sh:/app/wait.sh
      - ../data/teranode2/txstore:/app/data/txstore
      - ../data/teranode2/subtreestore:/app/data/subtreestore
      - ../data/teranode2/blockstore:/app/data/blockstore
      - ../data/teranode2/external:/app/data/external

  teranode3:
    <<: *teranode-base
    container_name: teranode3-chainintegrity-${TEST_ID:-default}
    image: teranode:latest
    depends_on:
      - aerospike-3
      - postgres
      - kafka-shared
    entrypoint:
      [
        "/app/wait.sh",
        "aerospike-3",
        "3300",
        "2",
        "--",
        "/app/wait.sh",
        "postgres",
        "5432",
        "0",
        "--",
        "/app/wait.sh",
        "kafka-shared",
        "9092",
        "0",
        "--",
        "/app/teranode.run",
        "-localTestStartFromState=RUNNING",
      ]
    environment:
      SETTINGS_CONTEXT: ${SETTINGS_CONTEXT_3:-docker.teranode3.test}
      logLevel: "DEBUG"
    ports:
      - "38000:8000"
      - "38081-38092:8081-8092"
      - "38094-38097:8094-8097"
      - "38099:8099"
      - "39091:9091"
      - "39905:9905"
      - "39292:9292"
    expose:
      - "8000"
      - "8081-8092"
      - "8094-8097"
      - "8099"
      - "9091"
      - "9905"
      - "9292"
    volumes:
      - ../settings.conf:/app/settings.conf
      - ./wait.sh:/app/wait.sh
      - ../data/teranode3/txstore:/app/data/txstore
      - ../data/teranode3/subtreestore:/app/data/subtreestore
      - ../data/teranode3/blockstore:/app/data/blockstore
      - ../data/teranode3/subtree_quorum:/app/data/subtree_quorum
      - ../data/teranode3/external:/app/data/external

  block-generator:
    image: curlimages/curl:latest
    container_name: block-generator-chainintegrity-${TEST_ID:-default}
    depends_on:
      - teranode1
    networks:
      - teranode-network
    volumes:
      - ./scripts/generate-blocks.sh:/generate-blocks.sh
    entrypoint:
      [
        "/generate-blocks.sh",
        "--host",
        "teranode1",
        "--generate",
        "--numBlocks",
        "20",
      ]
    restart: no

  coinbase1:
    <<: *teranode-coinbase-base
    container_name: coinbase1-chainintegrity-${TEST_ID:-default}
    depends_on:
      - teranode1
    entrypoint:
      ["sh", "-c", "sleep 5 && ./coinbase.run -all=0 -coinbase=1 -faucet=1"]
    environment:
      SETTINGS_CONTEXT: ${SETTINGS_CONTEXT_1:-docker.teranode1.test}.coinbase
      profilerAddr: "localhost:17092"
    volumes:
      - ../settings.conf:/app/settings.conf
      - ../settings_local.conf:/app/settings_local.conf
      - ../data/test/${TEST_ID:-chainintegrity}/coinbase1:/app/data

  tx-blaster-1:
    <<: *teranode-coinbase-base
    container_name: tx-blaster-1-chainintegrity-${TEST_ID:-default}
    depends_on:
      - coinbase1
      - teranode1
    environment:
      SETTINGS_CONTEXT: ${SETTINGS_CONTEXT_1:-docker.teranode1.test}.coinbase
      startCoinbase: "false"
      startFaucet: "false"
    entrypoint: ["./blaster.run"]
    command:
      [
        "-workers=1",
        "-print=0",
        "-profile=:7092",
        "-log=0",
        "-limit=100",
        "-iterations=200",
      ]
    volumes:
      - ../settings.conf:/app/settings.conf
      - ../settings_local.conf:/app/settings_local.conf
      - ../data/test/${TEST_ID:-chainintegrity}/txblaster1:/app/data
